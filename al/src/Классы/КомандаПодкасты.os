#Использовать entity

Процедура НастроитьКоманду(Знач Команда, Знач Парсер) Экспорт
	
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "read", "чтение текущей коллекции подкастов");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, 
		"--connectionstring", "текущая строка соединения с хранилищем данных сущностей");

КонецПроцедуры // НастроитьКоманду

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   Приложение - Модуль - Модуль менеджера приложения
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач Приложение) Экспорт

	Лог = Приложение.ПолучитьЛог();
	
	ПодключитьСценарий(
		ОбъединитьПути(ТекущийСценарий().Каталог, "Хранилище", "Подкасты.os"), 
	"Подкасты");

	ПодключитьСценарий(
		ОбъединитьПути(ТекущийСценарий().Каталог, "Хранилище", "ВидеоЗаписи.os"), 
	"ВидеоЗаписи");

	ПодключитьСценарий(
		ОбъединитьПути(ТекущийСценарий().Каталог, "Хранилище", "АудиоЗаписи.os"), 
	"АудиоЗаписи");

	Лог.Отладка("Обработка структуры подкасата");
	ПараметрОбновления = ПараметрыКоманды["update"];
	АдресФизическойМодели = ПараметрыКоманды["--connectionstring"];

	Если АдресФизическойМодели = Неопределено Тогда
		АдресФизическойМодели = ОбъединитьПути(ТекущийКаталог(),"hbd");
		Лог.Информация("Используется хранилище физических данных по умолчанию %1", АдресФизическойМодели);
	КонецЕсли;

	МенеджерСущностей = Новый МенеджерСущностей(Тип("КоннекторJSON"), АдресФизическойМодели);
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Подкасты"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("ВидеоЗаписи"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("АудиоЗаписи"));
	МенеджерСущностей.Инициализировать();

	Если ПараметрОбновления = Неопределено Тогда
		
	КонецЕсли;

	
	Возврат Приложение.РезультатыКоманд().Успех;
	
КонецФункции // ВыполнитьКоманду
